{"version":3,"file":"static/js/9.78da1acd.chunk.js","mappings":"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","sources":["components/clients.js","hooks/get.js"],"sourcesContent":["import React, { useEffect, useState, Suspense } from 'react';\nimport { useGetFetch } from '../hooks/get';\nimport \"../styles/clients.css\";\n\n// Importa tus componentes perezosos\nconst LazyProfile = React.lazy(() => import('./profile'));\nconst LazzyGraphic = React.lazy(() => import('./graphic'));\n\nconst Clients = () => {\n  const [allClients, setAllClients] = useState([]);\n  const [selectedComponent, setSelectedComponent] = useState(null); // Estado para controlar el componente seleccionado\n  const [selectedClient, setSelectedClient] = useState(null); // Estado para almacenar el cliente seleccionado\n  const { data: clients, loading, error } = useGetFetch(`${process.env.REACT_APP_BACKEND_URL}api/clients`);\n  \n  useEffect(() => {\n    if (!loading && !error) {\n        setAllClients(clients);\n    }\n  }, [clients, loading, error]);\n\n  const handleSelect = (component, client) => {\n    setSelectedComponent(component); // Actualiza el estado para mostrar el componente seleccionado\n    setSelectedClient(client); // Actualiza el estado para almacenar el cliente seleccionado\n  };\n\n  const handleBack = () => {\n    setSelectedComponent(null); // Actualiza el estado para mostrar la lista de clientes\n    setSelectedClient(null); // Restablece el cliente seleccionado\n  };\n\n  const showClients = () => {\n    if (!allClients.length) {\n      return <p>No clients available</p>;\n    }\n    \n    return allClients.map((item, index) => {\n      return (\n        <article key={index} id='client-card'>\n          <div className='row'>\n              <div className='col-8'>\n                  <p><strong>Personal information</strong></p>\n                  <p>{item.client_name} {item.client_surname}</p>\n                  <p>{item.client_email}</p>\n              </div>\n              <div className='col-4 d-flex justify-content-end align-items-start'>\n                  <i className=\"fa-solid fa-gear dropdown-toggle\" id=\"dropdownMenuButton1\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\"></i>\n                  <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\n                      <li><button className=\"dropdown-item\"  onClick={() => handleSelect('profile', item)}>Profile</button></li>\n                      <li><button className=\"dropdown-item\"onClick={() => handleSelect('graphic', item)}>Graphics</button></li>\n                      <li><button className=\"ms-3 btn btn-danger\">Delete</button></li>\n                  </ul>\n              </div>\n          </div>\n        </article>\n      );\n    });\n  };\n  \n  if (loading) return <p>Loading clients...</p>;\n  if (error) return <p>Error loading clients: {error.message}</p>;\n\n  return (\n    <section id='admin-article' className='container-fluid'>\n      <header className='cc-header row col-11 mx-auto my-3 p-4'>\n        <h1>Clients Section</h1>\n        <p>In this section you can see all the clients that you had and also see their personal file</p>\n        <form className=\"d-flex mt-5 mx-auto\" >\n          <input\n            className=\"form-control me-2 mb-4\"\n            type=\"search\"\n            placeholder=\"Search\"\n            aria-label=\"Search\"\n          />\n        </form>\n      </header>\n      <main className='row col-md-11 mx-auto clients-grid'>\n        {selectedComponent === null && showClients()}\n        <Suspense fallback={<div>Loading...</div>}>\n          {selectedComponent === 'profile' && <LazyProfile client={selectedClient} onBack={handleBack} />}\n          {selectedComponent === 'graphic' && <LazzyGraphic client={selectedClient.id} onBack={handleBack} />}\n        </Suspense>\n      </main>\n    </section>\n  );\n};\n\nexport default Clients;\n","import { useState, useEffect, useCallback } from 'react';\n\nexport const useGetFetch = (url, options = {}) => {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const fetchData = useCallback(async () => {\n    try {\n      setLoading(true);\n      const response = await fetch(url, options);\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const result = await response.json();\n      setData(result);\n    } catch (error) {\n      setError(error);\n    } finally {\n      setLoading(false);\n    }\n  }, [url, options]);\n\n  useEffect(() => {\n    fetchData(); // fetchData is now stable and can safely be used here\n  }, [fetchData]); // Include fetchData in the dependency array\n\n  const refetch = useCallback(() => {\n    fetchData(); // Reuse the memoized fetchData function\n  }, [fetchData]);\n\n  return { data, loading, error, refetch };\n};\n"],"names":["LazyProfile","React","LazzyGraphic","Clients","allClients","setAllClients","useState","selectedComponent","setSelectedComponent","selectedClient","setSelectedClient","data","clients","loading","error","useGetFetch","concat","process","useEffect","handleSelect","component","client","handleBack","_jsx","children","_jsxs","message","id","className","type","placeholder","length","map","item","index","client_name","client_surname","client_email","onClick","Suspense","fallback","onBack","url","options","arguments","undefined","setData","setLoading","setError","fetchData","useCallback","async","response","fetch","ok","Error","result","json","refetch"],"sourceRoot":""}